basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Event:
    properties:
      createdAt:
        type: string
      date:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: string
      image:
        type: string
      interests:
        items:
          type: string
        type: array
      location:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Users:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:9010
info:
  contact: {}
  title: User API documentation
  version: 1.0.0
paths:
  /api/createEvent:
    post:
      description: Endpoint used to create an entry of the event in db.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Create Event
      tags:
      - Events
  /api/createUser:
    post:
      description: Endpoint used to create an user in db.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Create User
      tags:
      - User
  /api/deleteEvent:
    delete:
      description: Endpoint used to delete an event from db based on id.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Delete Event
      tags:
      - Events
  /api/getEvent:
    get:
      description: Endpoint used to get an events from db based on id.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get Event
      tags:
      - Events
  /api/getEvents:
    get:
      description: Endpoint used to get all events from db.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get Events
      tags:
      - Events
  /api/searchEvent:
    get:
      description: Endpoint used to get all events based on the filter from db.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get Filtered Events
      tags:
      - Events
swagger: "2.0"
